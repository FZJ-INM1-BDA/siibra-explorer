name: '[docker image]'

on: [ 'push' ]

jobs:
  build-docker-img:
    
    runs-on: ubuntu-latest

    env:
      MATOMO_ID_DEV: '7'
      MATAMO_URL_DEV: 'https://stats-dev.humanbrainproject.eu/'
      MATOMO_ID_PROD: '12'
      MATAMO_URL_PROD: 'https://stats.humanbrainproject.eu/'
      PRODUCTION: 'true'
      DOCKER_REGISTRY: 'docker-registry.ebrains.eu/siibra-explorer/'

    steps:
    - name: 'Set matomo env var'
      run: |
        echo "Using github.ref: $GITHUB_REF"

        echo "::set-env name=BRANCH_NAME::${GITHUB_REF#refs/heads/}"
        
        if [[ "$GITHUB_REF" == 'refs/heads/master' ]] || [[ "$GITHUB_REF" == 'refs/heads/staging' ]]
        then
          echo "Either master or staging, using prod env..."
          echo "::set-env name=MATAMO_URL::${{ env.MATAMO_URL_PROD }}"
          echo "::set-env name=MATOMO_ID::${{ env.MATOMO_ID_PROD }}"
        else
          echo "Using dev env..."
          echo "::set-env name=MATAMO_URL::${{ env.MATAMO_URL_DEV }}"
          echo "::set-env name=MATOMO_ID::${{ env.MATOMO_ID_DEV }}"
        fi
        
    - name: 'Set version variable'
      run: |
        if [[ "$GITHUB_REF" == 'refs/heads/master' ]] || [[ "$GITHUB_REF" == 'refs/heads/staging' ]]
        then
          echo "Either master or staging, using package.json"
          VERSION=$(jq -r '.version' package.json)
        else
          echo "Using git hash"
          VERSION=$(git rev-parse --short HEAD)
        fi
        echo "::set-env name=VERSION::${VERSION}"
    - uses: actions/checkout@v2
    - name: 'Build docker image'
      run: |
        DOCKER_BUILT_TAG=${{ env.DOCKER_REGISTRY }}siibra-explorer:$BRANCH_NAME
        echo "Building $DOCKER_BUILT_TAG"
        docker build \
          --build-arg VERSION=$VERSION \
          --build-arg MATAMO_URL=$MATAMO_URL \
          --build-arg MATAMO_ID=$MATAMO_URL \
          -t $DOCKER_BUILT_TAG \
          .
        echo "Successfully built $DOCKER_BUILT_TAG"
        echo "::set-env name=DOCKER_BUILT_TAG::$DOCKER_BUILT_TAG"

    - name: 'Push to docker registry'
      run: |
        echo "Login to docker registry"
        docker login \
          -u ${{ secrets.EBRAINS_DOCKER_REG_USER }} \
          -p ${{ secrets.EBRAINS_DOCKER_REG_TOKEN }} \
          docker-registry.ebrains.eu
        echo "Pushing $DOCKER_BUILT_TAG"
        docker push $DOCKER_BUILT_TAG
