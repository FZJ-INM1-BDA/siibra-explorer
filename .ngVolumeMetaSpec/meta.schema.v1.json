{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "Meta v1 Schema",
    "type": "object",
    "properties": {
        "version": {
            "const": 1
        },
        "data": {
            "oneOf": [
                {
                    "$ref": "#/definitions/data-image"
                },
                {
                    "$ref": "#/definitions/data-image-1d"
                },
                {
                    "$ref": "#/definitions/data-image-3d"
                }
            ]
        },
        "transform": {
            "$ref": "#/definitions/mat4"
        },
        "preferredColormap": {
            "type": "array",
            "title": "Preferred colormap",
            "items": {
                "$ref": "#/definitions/shader-enum"
            },
            "description": "Preferred colormap in order of preference",
            "examples": [
                ["magma", "viridis", "greyscale"],
                ["greyscale"]
            ]
        },
        "https://schema.brainatlas.eu/github/humanbrainproject/neuroglancer": {
            "$ref": "#/definitions/hbp-ng"
        },
        "https://schema.brainatlas.eu/github/humanbrainproject/nehuba": {
            "$ref": "#/definitions/hbp-nehuba"
        },
        "bestViewPoints": {
            "title": "Best View Points",
            "description": "Best locations to view this volume.",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/geometry-point"
                    },
                    {
                        "$ref": "#/definitions/geometry-plane"
                    },
                    {
                        "$ref": "#/definitions/geometry-enclosed"
                    } 
                ]
            }
        }
    },
    "required": [
        "version"
    ],
    "definitions": {
        "data-image": {
            "type": "object",
            "title": "Generic Image",
            "description": "Generic image, with arbitary dimensions.",
            "properties": {
                "type": {
                    "const": "image"
                },
                "range": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/range"
                    }
                }
            },
            "required": [
                "type"
            ]
        },
        "data-image-1d": {
            "type": "object",
            "title": "Single Channel Image",
            "description": "Describes an image with 1 dimension, e.g. used as greyscale image.",
            "properties": {
                "type": {
                    "const": "image/1d"
                },
                "range": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/range"
                    },
                    "maxItems": 1,
                    "minItems": 1
                }
            },
            "required": [
                "type"
            ]
        },
        "data-image-3d": {
            "type": "object",
            "title": "Three Channel Image",
            "description": "Describes an image with 3 dimensions, mostly used as RGB image.",
            "properties": {
                "type": {
                    "const": "image/3d"
                },
                "range": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/range"
                    },
                    "maxItems": 3,
                    "minItems": 3
                }
            },
            "required": [
                "type"
            ]
        },
        "range": {
            "type": "object",
            "title": "Value Range",
            "description": "Describes the range of values",
            "properties": {
                "min": {
                    "type": "number"
                },
                "max": {
                    "type": "number"
                }
            },
            "default": {
                "min": 0,
                "max": 1
            },
            "examples": [
                {
                    "min": 0.2,
                    "max": 0.8
                },
                {
                    "min": 0.2
                },
                {
                    "max": 0.8
                }
            ]
        },
        "mat4": {
            "type": "array",
            "title": "4x4 affine",
            "items": {
                "type": "array",
                "items": {
                    "type": "number"
                },
                "maximum": 4,
                "minItems": 4
            },
            "maximum": 4,
            "minItems": 4,
            "default": [
                [
                    1,
                    0,
                    0,
                    0
                ],
                [
                    0,
                    1,
                    0,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "examples": [
                [
                    [
                        1,
                        0,
                        0,
                        100
                    ],
                    [
                        0,
                        1,
                        0,
                        200
                    ],
                    [
                        0,
                        0,
                        1,
                        300
                    ],
                    [
                        0,
                        0,
                        0,
                        1
                    ]
                ]
            ]
        },
        "vec3": {
            "type": "array",
            "title": "3x1 Vector",
            "minItems": 3,
            "maxItems": 3,
            "items": {
                "type": "number"
            }
        },
        "vec4": {
            "type": "array",
            "title": "4x1 Vector",
            "minItems": 4,
            "maxItems": 4,
            "items": {
                "type": "number"
            }
        },
        "geometry-point": {
            "title": "Point Geometry",
            "type": "object",
            "properties": {
                "type": {
                    "const": "point"
                },
                "value": {
                    "$ref": "#/definitions/vec3"
                }
            },
            "required": [
                "type"
            ]
        },
        "geometry-plane": {
            "title": "Plane Geometry",
            "type": "object",
            "properties": {
                "type": {
                    "const": "plane"
                }
            },
            "required": [
                "type"
            ]
        },
        "geometry-enclosed": {
            "title": "Enclosed Geometry",
            "type": "object",
            "properties": {
                "type": {
                    "const": "enclosed"
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/geometry-point"
                    }
                }
            }
        },
        "shader-enum": {
            "title": "Shader Enum",
            "oneOf": [{
                "const": "greyscale"
            }, {
                "const": "viridis"
            }, {
                "const": "plasma"
            }, {
                "const": "magma"
            }, {
                "const": "inferno"
            }, {
                "const": "jet"
            }]
        },
        "hbp-ng": {
            "title": "neuroglancer specific configurations",
            "description": "configurations specific to hbp fork of neuroglancer",
            "type": "object",
            "properties": {
                "shader": {
                    "type": "string",
                    "description": "Hints that client should use this shader for the volume in neuroglancer",
                    "examples": [
                        "void main() { emitGrayscale(toNormalized(getDataValue())); }"
                    ]
                }
            }
        },
        "hbp-nehuba": {
            "title": "nehuba speicfic configurations",
            "description": "configuration specific to nehuba (layer on top of hbp fork of neuroglancer)",
            "type": "object",
            "properties": {
                "config": {
                    "title": "configuration",
                    "description": "configuration to be used by this volume",
                    "type": "object",
                    "properties": {
                        "globals": {
                            "type": "object",
                            "properties": {
                                "useNehubaLayout": {
                                    "type": "boolean"
                                },
                                "useNehubaMeshLayer": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "zoomWithoutCtrl": {
                            "type": "boolean"
                        },
                        "rightClickWithCtrl": {
                            "type": "boolean"
                        },
                        "rotateAtViewCentre": {
                            "type": "boolean"
                        },
                        "zoomAtViewCentre": {
                            "type": "boolean"
                        },
                        "restrictUserNavigation": {
                            "type": "boolean"
                        },
                        "disableSegmentSelection": {
                            "type": "boolean"
                        },
                        "disableSegmentHighlighting": {
                            "type": "boolean"
                        },
                        "enableMeshLoadingControl": {
                            "type": "boolean"
                        },
                        "hideNeuroglancerUI": {
                            "type": "boolean"
                        },
                        "crossSectionBackground": {
                            "$ref": "#/definitions/vec3"
                        },
                        "perspectiveViewBackground": {
                            "$ref": "#/definitions/vec3"
                        },
                        "dataset": {
                            "type": "object",
                            "properties": {
                                "imageBackground": {
                                    "$ref": "#/definitions/vec3"
                                },
                                "initialNgState": {
                                    "type": "object"
                                }
                            }
                        },
                        "layout": {
                            "properties": {
                                "views": {
                                    "oneOf": [
                                        {
                                            "const": "hbp-neuro"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "slice1": {
                                                    "$ref": "#/definitions/vec4"
                                                },
                                                "slice2": {
                                                    "$ref": "#/definitions/vec4"
                                                },
                                                "slice3": {
                                                    "$ref": "#/definitions/vec4"
                                                }
                                            },
                                            "required": [ "slice1", "slice2", "slice3"]
                                        }
                                    ]
                                },
                                "hideSliceViewsCheckbox": {
                                    "type": "boolean"
                                },
                                "useNehubaPerspective": {
                                    "type": "object",
                                    "properties": {
                                        "enablePerspectiveDrag": {
                                            "type": "boolean"
                                        },
                                        "doNotRestrictUserNavigation": {
                                            "type": "boolean"
                                        },
                                        "perspectiveSlicesBackground": {
                                            "$ref": "#/definitions/vec3"
                                        },
                                        "removePerspectiveSlicesBackground": {
                                            "type": "object",
                                            "properties": {
                                                "color": {
                                                    "$ref": "#/definitions/vec3"
                                                },
                                                "mode": {
                                                    "oneOf": [
                                                        {
                                                            "const": "none"
                                                        },
                                                        {
                                                            "const": ">"
                                                        },
                                                        {
                                                            "const": ">="
                                                        },
                                                        {
                                                            "const": "=="
                                                        },
                                                        {
                                                            "const": "<="
                                                        },
                                                        {
                                                            "const": "<"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "fixedZoomPerspectiveSlices": {
                                            "type": "object",
                                            "properties": {
                                                "sliceViewportWidth": {
                                                    "type": "number"
                                                },
                                                "sliceViewportHeight": {
                                                    "type": "number"
                                                },
                                                "sliceZoom": {
                                                    "type": "number"
                                                },
                                                "sliceViewportSizeMultiplier": {
                                                    "oneOf": [
                                                        {
                                                            "const": 1
                                                        },
                                                        {
                                                            "const": 2
                                                        },
                                                        {
                                                            "const": 3
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [ "sliceViewportWidth", "sliceViewportHeight", "sliceZoom", "sliceViewportSizeMultiplier" ]
                                        },
                                        "mesh": {
                                            "type": "object",
                                            "properties": {
                                                "removeOctant": {
                                                    "$ref": "#/definitions/vec4"
                                                },
                                                "backFaceColor": {
                                                    "$ref": "#/definitions/vec3"
                                                },
                                                "removeBasedOnNavigation": {
                                                    "type": "boolean"
                                                },
                                                "flipRemovedOctant": {
                                                    "type": "boolean"
                                                },
                                                "surfaceParcellation": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "centerToOrigin": {
                                            "type": "boolean"
                                        },
                                        "drawSubstrates": {
                                            "type": "object",
                                            "properties": {
                                                "color": {
                                                    "$ref": "#/definitions/vec4"
                                                },
                                                "normalizedTranslate": {
                                                    "$ref": "#/definitions/vec3"
                                                }
                                            }
                                        },
                                        "drawZoomLevels": {
                                            "type": "object",
                                            "properties": {
                                                "cutOff": {
                                                    "type": "number"
                                                },
                                                "color": {
                                                    "$ref": "#/definitions/vec4"
                                                }
                                            }
                                        },
                                        "hideAllSlices": {
                                            "type": "boolean"
                                        },
                                        "hideSlices": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "const": "slice1"
                                                    },
                                                    {
                                                        "const": "slice2"
                                                    },
                                                    {
                                                        "const": "slice3"
                                                    }
                                                ]
                                            }
                                        },
                                        "waitForMesh": {
                                            "type": "boolean"
                                        },
                                        "restrictZoomLevel": {
                                            "type": "object",
                                            "properties": {
                                                "minZoom": {
                                                    "type": "number"
                                                },
                                                "maxZoom": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "disableAxisLinesInPerspective": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
