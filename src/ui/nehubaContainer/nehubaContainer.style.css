:host
{
  width:100%;
  height:100%;
  position:relative;
}

atlas-layer-container
{
  position: absolute;
  bottom: 0;
  lefT: 0;

  margin-bottom: 5em;
  margin-left: 1em;
  width: 30em;
  height: 50em;
}

input[navigateInput]
{
  background:none;
  width : 16em;
  padding-left: 0.5em;
  font-size:85%;
  box-shadow: inset 0px 2px 2px 2px rgba(0,0,0,0.05);
}

current-layout
{
  top: 0;
  left: 0;
  /** z index of current layout has to be higher than that of layout-floating-container, or status container will cover panel control */
  /** TODO decide which behaviour is more nature */
  z-index: 6;
}

div[landmarkMasterContainer]
{
  background:none;
  position: absolute;
  top:0;
  left:0;
  width:100%;
  height:100%;
  display:flex;
  flex-wrap: wrap;
  pointer-events: none;
}

div[landmarkMasterContainer] > div
{
  flex: 0 0 50%;
  height:50%;
  overflow:hidden;
  pointer-events: none;
  position : relative;
  border: 1 px solid blue;
}


div[landmarkMasterContainer] > div > [landmarkContainer] > div
{
  position : absolute;
  left: 0;
  top: 0;
  width: 0;
  height: 0;
  margin-left:-0.5em;
  margin-top:-1em;
}


[citationContainer]
{
  display:inline-block;
  max-width:300px;
  box-sizing: border-box;
  padding: 0.5em 1em;
}

hr
{
  margin : 0.2em 2em;
}


div.loadingIndicator
{
  left: auto;
  top: auto;
  right: 0;
  bottom: 0;
  margin-right: 0.2em;
  margin-bottom: 0.2em;
  width: 100%;
  position:absolute;
  height:2em;
  display: flex;
  flex-direction: row-reverse;
}

div.loadingIndicator div.spinnerAnimationCircle
{
  font-size:150%;
}

[perspectiveLoadingText]
{
  margin-right: 1em;
}

:host-context([darktheme="true"]) [perspectiveLoadingText]
{
  color:rgba(255,255,255,0.8);
}

div#scratch-pad
{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.load-fav-dataentries-fab
{
  right: 0;
  bottom: 0;
}

.overlay-btn-container
{
  position: absolute;
  bottom: 0;
  right: 0;
}

.status-card-container
{
  position:absolute;
  left:1em;
  bottom:1em;
  width : 20em;
  pointer-events: all;
}

/* if not mobile, then show on hover */

.opacity-crossfade
{
  transition: opacity 170ms ease-in-out,
    transform 250ms ease-in-out;
}

.opacity-crossfade
{

  opacity: 0.0;
  pointer-events: none;
}

.opacity-crossfade.onHover,
.opacity-crossfade:hover,
:host-context([ismobile="true"]) .opacity-crossfade
{
  opacity: 1.0 !important;
  pointer-events: all !important;
}
