apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: siibra-toolbox-deploy-template
metadata:
  annotations:
    description: Deploy siibra toolbox
    tags: python,async
  name: siibra-toolbox-deploy-template
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: siibra-toolbox-deploy-${TOOLBOX_NAME}
    name: siibra-toolbox-deploy-${TOOLBOX_NAME}-redis
      spec:
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-redis
    template:
      metadata:
        labels:
          app: siibra-toolbox-deploy-${TOOLBOX_NAME}
          deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-redis
      spec:
        containers:
        - image: docker-registry.ebrains.eu/monitoring/redis:alpine3.17
          imagePullPolicy: Always
          name: redis
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: siibra-toolbox-deploy-${TOOLBOX_NAME}
      app_role: worker
    name: siibra-toolbox-deploy-${TOOLBOX_NAME}-worker
  spec:
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-worker
    template:
      metadata:
        labels:
          app: siibra-toolbox-deploy-${TOOLBOX_NAME}
          app_role: worker
          deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-worker
      spec:
        containers:
        - env:
          - name: SIIBRA_TOOLBOX_NAME
            value: ${SIIBRA_TOOLBOX_NAME}
          - name: SIIBRA_TOOLBOX_CELERY_BROKER
            value: redis://redis:6379
          - name: SIIBRA_JURGEX_CELERY_RESULT
            value: redis://redis:6379

          # see [2]
          
          # - name: SIIBRA_TOOLBOX_DATA_DIR
          #   value: ${SHARED_VOLUME_MOUNT}

          # see [1]

          # - name: SIIBRA_TOOLBOX_LOG_DIR
          #   value: ${LOG_VOLUME_MOUNT}

          image: ${TOOLBOX_WORKER_IMAGE}
          imagePullPolicy: Always
          name: siibra-toolbox-deploy-${TOOLBOX_NAME}-worker
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:

          # see [2]

          # - mountPath: ${SHARED_VOLUME_MOUNT}
          #   name: volume-${SHARED_VOLUME_WORKER_VOLUME_NAME}

          # see [1]
          
          # - mountPath: ${LOG_VOLUME_MOUNT}
          #   name: volume-${LOG_VOLUME_WORKER_VOLUME_NAME}

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:

        # see [2]
        
        # - name: volume-${SHARED_VOLUME_WORKER_VOLUME_NAME}
        #   persistentVolumeClaim:
        #     claimName: toolbox-storage

        
        # see [1]

        # - name: volume-${LOG_VOLUME_WORKER_VOLUME_NAME}
        #   persistentVolumeClaim:
        #     claimName: log-volume

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: siibra-toolbox-deploy-${TOOLBOX_NAME}
      app_role: server
    name: siibra-toolbox-deploy-${TOOLBOX_NAME}-server
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-server
    template:
      metadata:
        labels:
          app: siibra-toolbox-deploy-${TOOLBOX_NAME}
          app_role: server
          deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-server
      spec:
        containers:
        - env:
          - name: SIIBRA_TOOLBOX_NAME
            value: ${SIIBRA_TOOLBOX_NAME}
          - name: SIIBRA_TOOLBOX_CELERY_BROKER
            value: redis://redis:6379
          - name: SIIBRA_JURGEX_CELERY_RESULT
            value: redis://redis:6379
            
          # see [2]

          # - name: SIIBRA_TOOLBOX_DATA_DIR
          #   value: ${SHARED_VOLUME_MOUNT}

          # see [1]

          # - name: SIIBRA_TOOLBOX_LOG_DIR
          #   value: ${LOG_VOLUME_MOUNT}
          image: ${TOOLBOX_SERVER_IMAGE}
          imagePullPolicy: Always

          # You can choose to have a liveness probe.
          # Here, it is at /ready
          # uncomment if you have

          # livenessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /ready
          #     port: 6001
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 1

          name: siibra-toolbox-deploy-${TOOLBOX_NAME}-server
          ports:
          - containerPort: 6001
            protocol: TCP

            

          # You can choose to have a readiness probe.
          # Here, it is at /ready
          # uncomment if you have

          # readinessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /ready
          #     port: 6001
          #     scheme: HTTP
          #   initialDelaySeconds: 3
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 6

          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          
          # see [2]
          
          # - mountPath: ${SHARED_VOLUME_MOUNT}
          #   name: volume-${SHARED_VOLUME_SERVER_VOLUME_NAME}
          
          # see [1]

          # - mountPath: ${LOG_VOLUME_MOUNT}
          #   name: volume-${LOG_VOLUME_SERVER_VOLUME_NAME}

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:

        # see [2]

        # - name: volume-${SHARED_VOLUME_SERVER_VOLUME_NAME}
        #   persistentVolumeClaim:
        #     claimName: toolbox-storage

        # see [1]

        # - name: volume-${LOG_VOLUME_SERVER_VOLUME_NAME}
        #   persistentVolumeClaim:
        #     claimName: log-volume

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: siibra-toolbox-deploy-${TOOLBOX_NAME}
    name: siibra-toolbox-deploy-${TOOLBOX_NAME}-service
  spec:
    ports:
    - name: 6001-tcp
      port: 6001
      protocol: TCP
      targetPort: 6001
    selector:
      deploymentconfig: siibra-toolbox-deploy-${TOOLBOX_NAME}-server
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: siibra-toolbox-deploy-${TOOLBOX_NAME}
    name: siibra-toolbox-deploy-${TOOLBOX_NAME}-route
  spec:
    host: ${TOOLBOX_ROUTE}
    port:
      targetPort: 6001-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: siibra-toolbox-deploy-${TOOLBOX_NAME}-service
      weight: 100
    wildcardPolicy: None

parameters:
- description: Toolbox name
  name: TOOLBOX_NAME
  required: true
- description: Toolbox Route, without scheme (i.e. no https?://). should be [a-z0-9][a-z0-9-][a-z0-9].apps(-dev)?.hbp.eu
  name: TOOLBOX_ROUTE
  required: true
- description: Docker image for the worker
  name: TOOLBOX_WORKER_IMAGE
  required: true
- description: Docker image for the server
  name: TOOLBOX_SERVER_IMAGE
  required: true

- description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
  name: SHARED_VOLUME_SERVER_VOLUME_NAME
- description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
  name: SHARED_VOLUME_WORKER_VOLUME_NAME
- description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
  name: LOG_VOLUME_SERVER_VOLUME_NAME
- description: Path where shared volume will be mounted. Applies to both server and
    worker pods.
  name: SHARED_VOLUME_MOUNT
  value: /siibra_toolbox_volume
- description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
  name: LOG_VOLUME_WORKER_VOLUME_NAME
- description: Randomly generated volume name. Do not overwrite
  from: '[a-z0-9]{8}'
  generate: expression
  name: LOG_VOLUME_SERVER_VOLUME_NAME
- description: Path where shared volume will be mounted. Applies to both server and
    worker pods.
  name: LOG_VOLUME_MOUNT
  value: /siibra_toolbox_logs



# [1] enabling logging volume
# 
# If you would like shared log storage between worker and server
# create a persistent log storage named `log-volume`
# Then uncomment this block


# [2] enabling shared data volume
# 
# If you would like shared data storage between worker and server
# create a persistent data storage named `toolbox-storage`
# Then uncomment this block
